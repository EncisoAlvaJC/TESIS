position=position_dodge(.9),width=.5) +
#scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
method='t.test',
hide.ns=T,label.y=1.6,
comparisons=list(c('Fp2','Fp2')))+
#stat_compare_means(data=Hurst.todo,inherit.aes=T)+
#theme(legend.position='bottom')
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,1))
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
labs(title='Comparisons between groups on REM') +
#labs(title='A',fill=NULL) +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
#scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6,
comparisons=list(c('Fp2','Fp2')))+
#stat_compare_means(data=Hurst.todo,inherit.aes=T)+
#theme(legend.position='bottom')
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,1))
p <- ggboxplot(ToothGrowth, x = "supp", y = "len",
color = "supp", palette = "npg", add = "jitter")
p
p + stat_compare_means()
my_comparisons <- list( c("0.5", "1"), c("1", "2"), c("0.5", "2") )
ggboxplot(ToothGrowth, x = "dose", y = "len",
color = "dose", palette = "npg")
ggboxplot(ToothGrowth, x = "dose", y = "len",
color = "dose", palette = "npg") +
stat_compare_means(comparisons = my_comparisons, label.y = c(29, 35, 40))
p <- ggboxplot(ToothGrowth, x = "supp", y = "len",
color = "supp", palette = "npg",
add = "jitter",
facet.by = "dose", short.panel.labs = FALSE)
p
p + stat_compare_means(
aes(label = paste0("p = ", ..p.format..))
)
p + stat_compare_means(
aes(label = paste0("p = ", ..p.format..)), camperisons=list(c('OJ','VC'))
)
p + stat_compare_means(
aes(label = paste0("p = ", ..p.format..)), comparisons=list(c('OJ','VC'))
)
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
labs(title='Comparisons between groups on REM') +
#labs(title='A',fill=NULL) +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
#scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6,
facet.by=Canal)+
#stat_compare_means(data=Hurst.todo,inherit.aes=T)+
#theme(legend.position='bottom')
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,1))
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
labs(title='Comparisons between groups on REM') +
#labs(title='A',fill=NULL) +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
#scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6,
facet.by='Canal')+
#stat_compare_means(data=Hurst.todo,inherit.aes=T)+
#theme(legend.position='bottom')
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,1))
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
labs(title='Comparisons between groups on REM') +
#labs(title='A',fill=NULL) +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
#scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6,
facet.by='Canal',
comparisons=list(c('CTRL','PMCI')))+
#stat_compare_means(data=Hurst.todo,inherit.aes=T)+
#theme(legend.position='bottom')
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,1))
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
labs(title='Comparisons between groups on REM') +
#labs(title='A',fill=NULL) +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
#scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6)+
#stat_compare_means(data=Hurst.todo,inherit.aes=T)+
#theme(legend.position='bottom')
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,1))
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
labs(title='Comparisons between groups on REM') +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6)+
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,1))
ggsave(filename='/comparacion_uno.png',path=dir_graf,
device='png',units='cm',width=20,height=7,dpi=300)
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
#labs(title='Comparisons between groups on REM') +
labs(title='A') +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6)+
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,0))
ggsave(filename='/comparacion_uno.png',path=dir_graf,
device='png',units='cm',width=20,height=7,dpi=300)
kanales  = read_excel(paste0(dir_info,'/info_intercanales.xlsx'))
if(orden_stam){
kanales  = read_excel(paste0(dir_info,'/info_intercanales_alterno.xlsx'))
}
n.canales    = length(kanales$Etiqueta)
canales.arch = kanales$Nombre_archivo
raw = read_excel(paste0(dir_res_pre,'/Source_vale_multi2.xlsx'))
Hurst.todo = matrix(0,ncol=8,nrow=90*n.canales)
colnames(Hurst.todo) = c('Participante','MOR_n','Epoca_n','Canal','Hurst','Estado',
'Neuropsi','Edad')
Hurst.todo = as.data.frame(Hurst.todo)
for(i in 1:90){
step = n.canales*(i-1)
channels = 1:n.canales
Hurst.todo[step+channels,'Participante'] = raw$Sujeto[i]
Hurst.todo[step+channels,'MOR_n']        = raw$MOR_n[i]
Hurst.todo[step+channels,'Epoca_n']      = raw$Epoca_n[i]
Hurst.todo[step+channels,'Canal']        = channels
Hurst.todo[step+channels,'Estado']       = 1*(raw$Sujeto[i]>5)
Hurst.todo[step+channels,'Edad']         = raw$Edad[i]
Hurst.todo[step+channels,'Neuropsi']     = raw$Neuropsi_gral[i]
for(ch in 1:n.canales){
Hurst.todo[step+ch,'Hurst'] = unlist(raw[canales.arch[ch]])[i]
}
}
Hurst.promedio = c()
for(sujeto in 1:9){
tmp       = Hurst.todo[grep(sujeto,Hurst.todo$Participante),]
promedios = aggregate(tmp,by=list(tmp$Canal),mean)
Hurst.promedio = rbind(Hurst.promedio,promedios)
}
if(usar.log){
Hurst.todo$Hurst     = log(Hurst.todo$Hurst)
Hurst.promedio$Hurst = log(Hurst.promedio$Hurst)
}
Hurst.todo$Canal       = factor(Hurst.todo$Canal,
labels=kanales$Etiqueta)
Hurst.todo$Estado      = factor(Hurst.todo$Estado,
labels=c('CTRL','PMCI'))
Hurst.promedio$Canal   = factor(Hurst.promedio$Canal,
labels=kanales$Etiqueta)
Hurst.promedio$Estado  = factor(Hurst.promedio$Estado,
labels=c('CTRL','PMCI'))
Hurst.promedio = as.data.frame(Hurst.promedio)
promedios = summarySE(Hurst.todo,measurevar='Hurst',
groupvars=c('Estado','Canal'),na.rm=T)
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
#labs(title='Comparisons between groups on REM') +
labs(title='B') +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6)+
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,0))
ggsave(filename='/comparacion_multi.png',path=dir_graf,
device='png',units='cm',width=20,height=7,dpi=300)
potencia.total = T
orden_stam     = TRUE
zoom           = T
unidad_par_t   = 'tiempo'
usar.log       = F
dur.chunk   = 1
archivo.excel = '/pvalores_Hurst.xlsx'
dir_gral    = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa'
dir_info    = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa'
dir_scripts = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/scripts'
dir_res_pre = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/Hurst'
dir_epocas  = 'C:/Users/EQUIPO 1/Desktop/julio/epocas_dfa_10'
dir_graf    = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/Hurst'
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jdk1.8.0_65')
require('readxl')
require('xlsx')
require('ggplot2')
require('ggpubr')
require('Rmisc')
source(paste0(dir_scripts,'/utileria.R'))
info     = read_excel(paste0(dir_info,'/info_tecnico.xlsx'))
kanales  = read_excel(paste0(dir_info,'/info_canales.xlsx'))
if(orden_stam){
kanales  = read_excel(paste0(dir_info,'/info_canales_alterno.xlsx'))
}
n.canales    = length(kanales$Etiqueta)
canales.arch = kanales$Nombre_archivo
raw = read_excel(paste0(dir_res_pre,'/Source_vale2.xlsx'))
Hurst.todo = matrix(0,ncol=8,nrow=90*n.canales)
colnames(Hurst.todo) = c('Participante','MOR_n','Epoca_n','Canal','Hurst','Estado',
'Neuropsi','Edad')
Hurst.todo = as.data.frame(Hurst.todo)
for(i in 1:90){
step = n.canales*(i-1)
channels = 1:n.canales
Hurst.todo[step+channels,'Participante'] = raw$Sujeto[i]
Hurst.todo[step+channels,'MOR_n']        = raw$MOR_n[i]
Hurst.todo[step+channels,'Epoca_n']      = raw$Epoca_n[i]
Hurst.todo[step+channels,'Canal']        = channels
Hurst.todo[step+channels,'Estado']       = 1*(raw$Sujeto[i]>5)
Hurst.todo[step+channels,'Edad']         = raw$Edad[i]
Hurst.todo[step+channels,'Neuropsi']     = raw$Neuropsi_gral[i]
for(ch in 1:n.canales){
Hurst.todo[step+ch,'Hurst'] = unlist(raw[canales.arch[ch]])[i]
}
}
Hurst.promedio = c()
for(sujeto in 1:9){
tmp       = Hurst.todo[grep(sujeto,Hurst.todo$Participante),]
promedios = aggregate(tmp,by=list(tmp$Canal),mean)
Hurst.promedio = rbind(Hurst.promedio,promedios)
}
if(usar.log){
Hurst.todo$Hurst     = log(Hurst.todo$Hurst)
Hurst.promedio$Hurst = log(Hurst.promedio$Hurst)
}
Hurst.todo$Canal       = factor(Hurst.todo$Canal,
labels=kanales$Etiqueta)
Hurst.todo$Estado      = factor(Hurst.todo$Estado,
labels=c('CTRL','PMCI'))
Hurst.promedio$Canal   = factor(Hurst.promedio$Canal,
labels=kanales$Etiqueta)
Hurst.promedio$Estado  = factor(Hurst.promedio$Estado,
labels=c('CTRL','PMCI'))
Hurst.promedio = as.data.frame(Hurst.promedio)
promedios = summarySE(Hurst.todo,measurevar='Hurst',
groupvars=c('Estado','Canal'),na.rm=T)
raw.ctl = rbind(raw[grep(1,raw$Sujeto),],
raw[grep(2,raw$Sujeto),],
raw[grep(3,raw$Sujeto),],
raw[grep(4,raw$Sujeto),],
raw[grep(5,raw$Sujeto),]
)
raw.pdc = rbind(raw[grep(6,raw$Sujeto),],
raw[grep(7,raw$Sujeto),],
raw[grep(8,raw$Sujeto),],
raw[grep(9,raw$Sujeto),]
)
pvalores           = matrix(2,nrow=n.canales,ncol=4)
colnames(pvalores) = c('canal','p','T','df')
pvalores[,'canal'] = kanales$Etiqueta
i = 2
a = unlist(raw.ctl[kanales$Nombre_archivo[i]])
b = unlist(raw.pdc[kanales$Nombre_archivo[i]])
ttt = t.test(a,b,var.equal = F)
ttt
orden_stam = T
dur.chunk   = c(1)
quienes     = 4
zoom           = T
unidad_par_t   = 'tiempo'
dir_gral       = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa'
dir_info       = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa'
dir_scripts    = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/scripts'
dir_registro   = 'C:/Users/EQUIPO 1/Desktop/julio/DATOS_corregido/'
dir_resultados = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/espectro_171111'
require('beepr')
require('readxl')
source(paste0(dir_scripts,'/utileria.R'))
info     = read_excel(paste0(dir_info,'/info_tecnico.xlsx'))
kanales  = read_excel(paste0(dir_info,'/info_canales.xlsx'))
if(orden_stam){
kanales  = read_excel(paste0(dir_info,'/info_canales_alterno.xlsx'))
}
n.canales = length(kanales$Etiqueta)
nom_dir   = info$Nombre_directorio
nom_arch  = info$Nombre_archivo
nom_facil = info$Nombre
frecuenciasss = info$Fr_muestreo
grupo_de      = info$Grupo_n
h_ini = info$hh_0
m_ini = info$mm_0
s_ini = info$ss_0
h_fin = info$hh_f
m_fin = info$mm_f
s_fin = info$ss_f
beep()
dur_epoca = 1
sujeto = quienes
nombre   = nom_arch[sujeto]
etiqueta = nom_facil[sujeto]
dir_datos = paste0(dir_registro,nom_dir[sujeto])
dir_res   = dir_resultados
fr_muestreo = frecuenciasss[sujeto]
min_hms = c(h_ini[sujeto],m_ini[sujeto],s_ini[sujeto])
max_hms = c(h_fin[sujeto],m_fin[sujeto],s_fin[sujeto])
setwd(dir_scripts)
source('multi_espectro_integrado03_paralelizado.R' )
beep()
setwd(dir_scripts)
source('multi_espectro_integrado03_paralelizado.R' )
beep()
stopCluster(closter)
sujeto = 14
nombre   = nom_arch[sujeto]
etiqueta = nom_facil[sujeto]
dir_datos = paste0(dir_registro,nom_dir[sujeto])
dir_res   = dir_resultados
fr_muestreo = frecuenciasss[sujeto]
min_hms = c(h_ini[sujeto],m_ini[sujeto],s_ini[sujeto])
max_hms = c(h_fin[sujeto],m_fin[sujeto],s_fin[sujeto])
setwd(dir_scripts)
source('multi_espectro_integrado03_paralelizado.R' )
beep()
warnings()
potencia.total = T
orden_stam     = TRUE
zoom           = T
unidad_par_t   = 'tiempo'
usar.log       = F
dur.chunk   = 1
archivo.excel = '/pvalores_Hurst.xlsx'
dir_gral    = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa'
dir_info    = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa'
dir_scripts = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/scripts'
dir_res_pre = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/Hurst'
dir_epocas  = 'C:/Users/EQUIPO 1/Desktop/julio/epocas_dfa_10'
dir_graf    = 'C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/Hurst'
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jdk1.8.0_65')
require('readxl')
require('xlsx')
require('ggplot2')
require('ggpubr')
require('Rmisc')
source(paste0(dir_scripts,'/utileria.R'))
info     = read_excel(paste0(dir_info,'/info_tecnico.xlsx'))
kanales  = read_excel(paste0(dir_info,'/info_canales.xlsx'))
if(orden_stam){
kanales  = read_excel(paste0(dir_info,'/info_canales_alterno.xlsx'))
}
n.canales    = length(kanales$Etiqueta)
canales.arch = kanales$Nombre_archivo
raw = read_excel(paste0(dir_res_pre,'/Source_vale2.xlsx'))
Hurst.todo = matrix(0,ncol=8,nrow=90*n.canales)
colnames(Hurst.todo) = c('Participante','MOR_n','Epoca_n','Canal','Hurst','Estado',
'Neuropsi','Edad')
Hurst.todo = as.data.frame(Hurst.todo)
for(i in 1:90){
step = n.canales*(i-1)
channels = 1:n.canales
Hurst.todo[step+channels,'Participante'] = raw$Sujeto[i]
Hurst.todo[step+channels,'MOR_n']        = raw$MOR_n[i]
Hurst.todo[step+channels,'Epoca_n']      = raw$Epoca_n[i]
Hurst.todo[step+channels,'Canal']        = channels
Hurst.todo[step+channels,'Estado']       = 1*(raw$Sujeto[i]>5)
Hurst.todo[step+channels,'Edad']         = raw$Edad[i]
Hurst.todo[step+channels,'Neuropsi']     = raw$Neuropsi_gral[i]
for(ch in 1:n.canales){
Hurst.todo[step+ch,'Hurst'] = unlist(raw[canales.arch[ch]])[i]
}
}
Hurst.promedio = c()
for(sujeto in 1:9){
tmp       = Hurst.todo[grep(sujeto,Hurst.todo$Participante),]
promedios = aggregate(tmp,by=list(tmp$Canal),mean)
Hurst.promedio = rbind(Hurst.promedio,promedios)
}
if(usar.log){
Hurst.todo$Hurst     = log(Hurst.todo$Hurst)
Hurst.promedio$Hurst = log(Hurst.promedio$Hurst)
}
Hurst.todo$Canal       = factor(Hurst.todo$Canal,
labels=kanales$Etiqueta)
Hurst.todo$Estado      = factor(Hurst.todo$Estado,
labels=c('CTRL','PMCI'))
Hurst.promedio$Canal   = factor(Hurst.promedio$Canal,
labels=kanales$Etiqueta)
Hurst.promedio$Estado  = factor(Hurst.promedio$Estado,
labels=c('CTRL','PMCI'))
Hurst.promedio = as.data.frame(Hurst.promedio)
promedios = summarySE(Hurst.todo,measurevar='Hurst',
groupvars=c('Estado','Canal'),na.rm=T)
if(FALSE){
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
labs(title='Exponente de Hurst') +
xlab(NULL) + ylab('Exp. de Hurst') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +theme_classic() +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(
label = 'p.signif',method='t.test',
hide.ns=T)+
#rotate_x_text(angle = 45) +
theme(legend.position='bottom')
}
ggplot(promedios,aes(x=Canal,y=Hurst,fill=Estado)) +
#labs(title='Comparisons between groups on REM') +
labs(title='A') +
theme_classic2() +
labs(fill=NULL) +
xlab(NULL) + ylab('Hurst Exponent') +
geom_bar(stat='identity',position=position_dodge(),
color='black') +
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),
position=position_dodge(.9),width=.5) +
coord_cartesian(ylim=c(.5,1.7))+
scale_fill_grey(start = 1, end = 0) +
stat_compare_means(data=Hurst.todo,inherit.aes=F,
mapping=aes(x=Canal,y=Hurst,fill=Estado),
label='p.signif',method='t.test',
hide.ns=T,label.y=1.6)+
theme(legend.position=c(1,1),legend.direction = 'horizontal',
legend.justification=c(1,0))
raw.ctl = rbind(raw[grep(1,raw$Sujeto),],
raw[grep(2,raw$Sujeto),],
raw[grep(3,raw$Sujeto),],
raw[grep(4,raw$Sujeto),],
raw[grep(5,raw$Sujeto),]
)
raw.pdc = rbind(raw[grep(6,raw$Sujeto),],
raw[grep(7,raw$Sujeto),],
raw[grep(8,raw$Sujeto),],
raw[grep(9,raw$Sujeto),]
)
pvalores           = matrix(2,nrow=n.canales,ncol=4)
colnames(pvalores) = c('canal','p','T','dF')
pvalores[,'canal'] = kanales$Etiqueta
