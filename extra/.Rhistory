}
plot(0,type='n',xlim=log(c(min(frec),max(frec))),ylim=c(mmin,mmax))
min(frec)
plot(0,type='n',xlim=c(2,log(max(frec))),ylim=c(mmin,mmax))
for(k in 1:length(colores)){
lines(log(frec),spp[k,],type='l')
}
plot(0,type='n',xlim=c(2,log(max(frec))),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec),spp[k,],type='l')
}
frec
plot(0,type='n',xlim=c(2,log(max(frec),2)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l')
}
plot(0,type='n',xlim=c(2,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l')
}
log(100,10)
plot(0,type='n',xlim=c(1,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l')
}
plot(0,type='n',xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l')
}
coll    = c('gray','pink','red','blue','violet')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l',col=coll[k])
}
plot(0,type='n',xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l',col=coll[k],lwd=2)
}
plot(0,type='n',xlim=c(-1,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l',col=coll[k],lwd=2)
}
plot(0,type='n',xlim=c(-0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color')
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l',col=coll[k],lwd=2)
}
plot(0,type='n',xlim=c(-0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color',
xaxt='n',las=2)
axis(1,at=log(frec,10),label=frec)
axis(1,at=log(1:10,10),label=F)
plot(0,type='n',xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color',
xaxt='n',las=2)
axis(1,at=log(1:10,10),label=F)
axis(1,at=0:10,label=10**(0:10))
axis(1,at=log((1:10)*(10**2),10),label=F)
plot(0,type='n',xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color',
xaxt='n',las=2)
axis(1,at=log((1:10)*(10**0),10),label=F)
axis(1,at=log((1:10)*(10**1),10),label=F)
axis(1,at=log((1:10)*(10**2),10),label=F)
axis(1,at=0:10,label=10**(0:10))
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l',col=coll[k],lwd=2)
}
require(ggplot2)
qplot(spp[1,])
qplot(spp[1,],geom='line')
qplot(frec,spp[1,],geom='line')
qplot(frec,spp[1,],geom='line',main='Ruido de color')
qplot(frec,spp[1,],geom='line',main='Ruido de color',
xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax))
qplot(log(frec,10),spp[1,],
geom='line',main='Ruido de color',
xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax))
p = qplot(log(frec,10),spp[1,],
geom='line',main='Ruido de color',
xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax))
p =
qplot(log(frec,10),spp[1,],
geom='line',main='Ruido de color',
xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax))
+
qplot(log(frec,10),spp[2,],
geom='line',main='Ruido de color',
xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax))
row.names(spp) = c('R. blanco','R. rosa','R. rojo','R. azul',
'R. violeta')
View(spp)
ggplot(data = spp)
espectros = data.frame(blanco  =spp[1,],
rosa    =spp[2,],
rojo    =spp[3,],
azul    =spp[4,],
violeta =spp[5,],
frecuancia = frec)
ggplot(data = espectros,aes(x=frecuancia,y=value,colour=variable)+
geom_line())
ggplot(espectros,aes(frecuancia)+
geom_line(aes(y=blanco,colour='black'))
)
espectros = data.frame(blanco  =spp[1,],
rosa    =spp[2,],
rojo    =spp[3,],
azul    =spp[4,],
violeta =spp[5,],
frrr = frec)
ggplot(espectros,aes(frrr)+
geom_line(aes(y=blanco,colour='black')))
ggplot(espectros,aes(frrr)+
geom_line(aes(y=blanco,colour='black'))+
geom_line(aes(y=blanco,colour='pink')))
espectros
ggplot(espectros,aes(frrr)+
geom_line(aes(y=blanco,colour='blanco'))+
geom_line(aes(y=rosa,colour='rosa')))
ggplot(data=espectros,
aes(x=frecuancia,y=value,colour=variable))+
geom_line()
ggplot(data=espectros,
aes(x=frrr,y=value,colour=variable))+
geom_line()
ggplot(data=espectros,
aes(x=frrr,y=blanco,colour=variable))+
geom_line()
ggplot(data=espectros,
aes(x=frrr,y=blanco,colour=variable'gray'))+
geom_line()
ggplot(data=espectros,
aes(x=frrr,y=blanco,colour='gray'))+
geom_line()
ggplot(data=espectros,
aes(x=frrr,y=blanco,colour='R. blanco'))+
geom_line()
ggplot(data=espectros,
aes(x=frrr,y=blanco,colour='R. blanco'),
aes(x=frrr,y=rosa,colour='R. rosa'))+
geom_line()
espectros %>%
gather(key,value, var0, var1) %>%
ggplot(aes(x=frrr, y=value, colour=key)) +
geom_line()
require(tidyr)
install.packages("tidyr")
require(tidyr)
espectros %>%
gather(key,value, var0, var1) %>%
ggplot(aes(x=frrr, y=value, colour=key)) +
geom_line()
espectros %>%
gather(key,value, blanco, rosa) %>%
ggplot(aes(x=frrr, y=value, colour=key)) +
geom_line()
espectros %>%
gather(key,value, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=value, colour=key)) +
geom_line()
espectros %>%
gather(Color,Frecuencia, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Frecuencia, colour=Color)) +
geom_line()
espectros %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Frecuencia, colour=Color)) +
geom_line() +
coord_trans(y = "log10",x = "log10")
espectros %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
coord_trans(y = "log10",x = "log10")
espectros2 = subset(espectros,frrr>10)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
coord_trans(y = "log10",x = "log10")
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
coord_trans(y = "log10")
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
coord_trans(x = "log10")
qplot(log(frec,10),spp[1,],
geom='line',main='Ruido de color',
xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax))
mmax = max(spp)
mmin = min(spp)
plot(0,type='n',xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color',
xaxt='n',las=2)
axis(1,at=log((1:10)*(10**0),10),label=F)
axis(1,at=log((1:10)*(10**1),10),label=F)
axis(1,at=log((1:10)*(10**2),10),label=F)
axis(1,at=0:10,label=10**(0:10))
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l',col=coll[k],lwd=2)
}
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
coord_trans(x = "log10")
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
require(scales)
espectros2 = subset(espectros,frrr>10)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
espectros2 = subset(espectros,frrr>5)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
espectros2 = subset(espectros,frrr>2)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
espectros2 = subset(espectros,frrr>1)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
espectros2 = subset(espectros,frrr>.5)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
setwd('~/TESIS/TESIS/extra')
require(tuneR)
require(psd)
colores = c(0,1,2,-1,-2)
coll    = c('gray','pink','red','blue','violet')
set.seed(2017)
frr  = 2*(10**4)
comp = 1
spp  = matrix(0,nrow=length(colores),ncol=comp*frr/2)
for(k in 1:length(colores)){
blanco = noise(kind='power',alpha=colores[k],
duration=comp,samp.rate=frr,
xunit='time')
blanco.v = attr(blanco,'left')
per.blanco = pspectrum(blanco.v,x.frqsamp=frr,Nyquist.normalize=F)
spp[k,] = log(per.blanco$spec)
}
frec = per.blanco$freq
for(k in 1:length(colores)){
spp[k,] = spp[k,] - (spp[k,1])
}
mmax = max(spp)
mmin = min(spp)
require(ggplot2)
row.names(spp) = c('R. blanco','R. rosa','R. rojo','R. azul',
'R. violeta')
espectros = data.frame(blanco  =spp[1,],
rosa    =spp[2,],
rojo    =spp[3,],
azul    =spp[4,],
violeta =spp[5,],
frrr = frec)
require(tidyr)
require(scales)
espectros2 = subset(espectros,frrr>.5)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()
source('~/TESIS/TESIS/extra/color_noise.R')
plot(0,type='n',xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax),
xlab = 'Frecuencia (Hz)',
ylab='Densidad de Potencia Espectral (dB)',
main='Ruidos de color',
xaxt='n',las=2)
axis(1,at=log((1:10)*(10**0),10),label=F)
axis(1,at=log((1:10)*(10**1),10),label=F)
axis(1,at=log((1:10)*(10**2),10),label=F)
axis(1,at=0:10,label=10**(0:10))
for(k in 1:length(colores)){
lines(log(frec,10),spp[k,],type='l',col=coll[k],lwd=2)
}
require(ggplot2)
qplot(log(frec,10),spp[1,],
geom='line',main='Ruido de color',
xlim=c(0,log(max(frec),10)),ylim=c(mmin,mmax))
row.names(spp) = c('R. blanco','R. rosa','R. rojo','R. azul',
'R. violeta')
espectros = data.frame(blanco  =spp[1,],
rosa    =spp[2,],
rojo    =spp[3,],
azul    =spp[4,],
violeta =spp[5,],
frrr = frec)
ggplot(data=espectros,
aes(x=frrr,y=blanco,colour='R. blanco'),
aes(x=frrr,y=rosa,colour='R. rosa'))+
geom_line()
require(tidyr)
require(scales)
espectros2 = subset(espectros,frrr>.5)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','red'))
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','pink','red','blue','violet'))
source('~/TESIS/TESIS/extra/color_noise.R')
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','pink','red','blue','violet'))
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','pink','red','blue','violet'))
source('~/TESIS/TESIS/extra/color_noise.R')
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','pink','red','blue','violet'))
espectros2 = subset(espectros,frrr>1)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','pink','red','blue','violet'))
espectros2 = subset(espectros,frrr>2)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','pink','red','blue','violet'))
espectros2 = subset(espectros,frrr>3)
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('black','pink','red','blue','violet'))
espectros2 %>%
gather(Color,Espectro, blanco, rosa,rojo,azul,violeta) %>%
ggplot(aes(x=frrr, y=Espectro, colour=Color)) +
geom_line() +
#coord_trans(x = "log10")
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans = log10_trans(),
#                   breaks = trans_breaks("log10", function(x) 10^x),
#                   labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks()+
scale_color_manual(values=c('blue','black','red','pink','violet'))
