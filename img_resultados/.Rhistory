ylim=c(mm,MM),xlab='th',ylab='K(th)',
main='Ventana de Bartlett-Priestley (normalizada)',
sub='Dominio frecuencias')
lines(th,K.t,type='l',col='red')
legend(x='topright',legend=c('Original','Truncada'),
fill=c('black','red'),bty='n')
dt       = 1/1000
t        = seq(-150,150,by=dt)
dt       = t[2]-t[1]
ajuste   = 1/( sum(k(t)**2)*dt*(2*pi) )
ajuste.t = 1/( sum(k.t(t)**2)*dt*(2*pi) )
kv       = k(t)  * sqrt(ajuste)
kv.t     = k.t(t)* sqrt(ajuste.t)
B.g   = sum(abs(t)*kv  )*dt
B.g.t = sum(abs(t)*kv.t)*dt
print(       'Anchos de banda (g)')
print(paste0('Normal  : ',toString(B.g)))
print(paste0('Truncado: ',toString(B.g.t)))
nu   = 2/(sum(kv**2  )*dt)
nu.t = 2/(sum(kv.t**2)*dt)
print(       'Grados de libertad equivalentes')
print(paste0('Normal  : ',toString(nu)))
print(paste0('Truncado: ',toString(nu.t)))
rr   = 10**5
mini = -150
maxi =  150
K   = fourierin(f=k,freq_adj=1,lower_int=-100,upper_int=100,const_adj=0,
lower_eval=mini,upper_eval=maxi,resol=rr)
K.t = fourierin(f=k.t,freq_adj=1,lower_int=-100,upper_int=100,const_adj=0,
lower_eval=mini,upper_eval=maxi,resol=rr)
th  = K$w
dth = t[2]-t[1]
K   = Mod(K$values  )
K.t = Mod(K.t$values)
ajuste   = 1/( sum(K**2)*dt )
ajuste.t = 1/( sum(K.t**2)*dt )
K   = K  *ajuste
K.t = K.t*ajuste.t
B.G   = sum((th**2)*(K**2  ))*dth
B.G.t = sum((th**2)*(K.t**2))*dth
print(       'Ancho de banda (GAMMA)')
print(paste0('Normal  : ',toString(B.G)))
print(paste0('Truncado: ',toString(B.G.t)))
G4   = sum(K**4  )*dth
G4.t = sum(K.t**4)*dth
print(       'Factor int G**4')
print(paste0('Normal  : ',toString(G4)))
print(paste0('Truncado: ',toString(G4.t)))
qq = 100
fun = rep(0,qq+1)
oo  = 0:qq
K.M = K**2
K.M.t = K.t**2
qq = 100
fun = rep(0,qq+1)
oo  = 0:qq
K.M   = K**2
K.M.t = K.t**2
qq = 100
fun = rep(0,qq+1)
oo  = 1+(0:qq)
K.M   = K**2
K.M.t = K.t**2
for(i in oo){
ind    = 1:(length(K.M)-i+1)
fun[i] = sum( K.M[ind]*K.M[ind+i-1] )*dth
}
plot(fun)
plot(oo*dth,fun,type='l')
plot(oo*dth,fun,type='l',bty='n',
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
qq    = 100
oo    = 1+(0:qq)
fun   = rep(0,qq+1)
fun.t = rep(0,qq+1)
K.M   = K**2
K.M.t = K.t**2
for(i in oo){
ind      = 1:(length(K.M)-i+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+i-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+i-1] )*dth
}
plot(oo*dth,fun,type='l',bty='n',
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
legend(x='topright',legend=c('Original','Truncada'),
fill=c('black','red'),bty='n')
qq    = 200
oo    = 1+(0:qq)
fun   = rep(0,qq+1)
fun.t = rep(0,qq+1)
K.M   = K**2
K.M.t = K.t**2
for(i in oo){
ind      = 1:(length(K.M)-i+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+i-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+i-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
legend(x='topright',legend=c('Original','Truncada'),
fill=c('black','red'),bty='n')
qq    = 1000
oo    = 1+(0:qq)
fun   = rep(0,qq+1)
fun.t = rep(0,qq+1)
K.M   = K**2
K.M.t = K.t**2
for(i in oo){
ind      = 1:(length(K.M)-i+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+i-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+i-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
legend(x='topright',legend=c('Original','Truncada'),
fill=c('black','red'),bty='n')
qq    = 10000
oo    = 1+(0:qq)
fun   = rep(0,qq+1)
fun.t = rep(0,qq+1)
K.M   = K**2
K.M.t = K.t**2
for(i in oo){
ind      = 1:(length(K.M)-i+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+i-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+i-1] )*dth
}
maxi  = 10000
oo    = seq(1,maxi+1,by=200)
qq    = length(oo)
fun   = rep(0,qq+1)
fun.t = rep(0,qq+1)
K.M   = K**2
K.M.t = K.t**2
for(i in oo){
ind      = 1:(length(K.M)-i+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+i-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+i-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
fun   = rep(0,qq)
fun.t = rep(0,qq)
K.M   = K**2
K.M.t = K.t**2
for(i in oo){
ind      = 1:(length(K.M)-i+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+i-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+i-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
maxi  = 10000
oo    = seq(1,maxi+1,by=200)
qq    = length(oo)
fun   = rep(0,qq)
fun.t = rep(0,qq)
K.M   = K**2
K.M.t = K.t**2
for(i in 1:qq){
dd       = oo[i]
ind      = 1:(length(K.M)-dd+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+dd-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+dd-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
maxi  = 1000
oo    = seq(1,maxi+1,by=200)
qq    = length(oo)
fun   = rep(0,qq)
fun.t = rep(0,qq)
K.M   = K**2
K.M.t = K.t**2
for(i in 1:qq){
dd       = oo[i]
ind      = 1:(length(K.M)-dd+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+dd-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+dd-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
maxi  = 2000
oo    = seq(1,maxi+1,by=200)
qq    = length(oo)
fun   = rep(0,qq)
fun.t = rep(0,qq)
K.M   = K**2
K.M.t = K.t**2
for(i in 1:qq){
dd       = oo[i]
ind      = 1:(length(K.M)-dd+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+dd-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+dd-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
maxi  = 2000
oo    = seq(1,maxi+1,by=50)
qq    = length(oo)
fun   = rep(0,qq)
fun.t = rep(0,qq)
K.M   = K**2
K.M.t = K.t**2
for(i in 1:qq){
dd       = oo[i]
ind      = 1:(length(K.M)-dd+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+dd-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+dd-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
abline(h=.05,col='gray')
abline(h=.05,col='gray4')
abline(h=.05,col='blue')
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
legend(x='topright',legend=c('Original','Truncada'),
fill=c('black','red'),bty='n')
abline(h=.05,col='blue')
ajuste   = 1/( sum(K**2)*dt )
ajuste.t = 1/( sum(K.t**2)*dt )
rr   = 10**5
mini = -150
maxi =  150
K   = fourierin(f=k,freq_adj=1,lower_int=-100,upper_int=100,const_adj=0,
lower_eval=mini,upper_eval=maxi,resol=rr)
K.t = fourierin(f=k.t,freq_adj=1,lower_int=-100,upper_int=100,const_adj=0,
lower_eval=mini,upper_eval=maxi,resol=rr)
th  = K$w
dth = t[2]-t[1]
K   = Mod(K$values  )
K.t = Mod(K.t$values)
ajuste   = 1/( sum(K**2)*dt )
ajuste.t = 1/( sum(K.t**2)*dt )
K   = K  *sqrt(ajuste  )
K.t = K.t*sqrt(ajuste.t)
B.G   = sum((th**2)*(K**2  ))*dth
B.G.t = sum((th**2)*(K.t**2))*dth
print(       'Ancho de banda (GAMMA)')
print(paste0('Normal  : ',toString(B.G)))
print(paste0('Truncado: ',toString(B.G.t)))
G4   = sum(K**4  )*dth
G4.t = sum(K.t**4)*dth
print(       'Factor int G**4')
print(paste0('Normal  : ',toString(G4)))
print(paste0('Truncado: ',toString(G4.t)))
maxi  = 2000
oo    = seq(1,maxi+1,by=50)
qq    = length(oo)
fun   = rep(0,qq)
fun.t = rep(0,qq)
ajuste   = 1/( sum(K**2)*dt )
ajuste.t = 1/( sum(K.t**2)*dt )
K   = K  *ajuste
K   = K  *sqrt(ajuste  )
K.t = K.t*sqrt(ajuste.t)
K.M   = K**2
K.M.t = K.t**2
for(i in 1:qq){
dd       = oo[i]
ind      = 1:(length(K.M)-dd+1)
fun[i]   = sum( K.M[ind]  *K.M[ind+dd-1] )*dth
fun.t[i] = sum( K.M.t[ind]*K.M[ind+dd-1] )*dth
}
mm = min(min(fun),min(fun.t))
MM = max(max(fun),max(fun.t))
plot(oo*dth,fun,type='l',bty='n',ylim=c(mm,MM),
xlab='d omega',ylab='Interferencia en frecuencias',
main='Ventana de Bartlett-Priestley')
lines(oo*dth,fun.t,type='l',col='red')
legend(x='topright',legend=c('Original','Truncada'),
fill=c('black','red'),bty='n')
abline(h=.05,col='blue')
install.packages("psd")
install.packages(c("RcppArmadillo", "scales", "tibble"))
install.packages("mgcv", lib="/usr/lib/R/library")
cite()
citation()
sujeto = 2
dir_actual  = '~/TESIS/TESIS/img_resultados'
dir_graf    = '~/TESIS/TESIS/img_resultados'
dir_res_mid = '~/TESIS/graf_datos/espectro_integrado_15s'
dir_epocas  = '~/TESIS/graf_datos/epocas3/'
grabar_tot = F
no_relativo = T
v.nombres    = c('VCNNS1',
'MJNNVIGILOS',
'JANASUE',
'GH24031950SUEÃ‘O',
'GURM251148SUE',
'CLMN10SUE',
'RLMN10SUE',
'RRMNS',
'JGMN6SUE',
'FGHSUE',
'MGNA5SUE',
'EMNNS')
v.etiqueta   = c('VCR',
'MJH',
'JAE',
'GHA',
'MFGR',
'CLO',
'RLO',
'RRU',
'JGZ',
'FGH',
'MGG',
'EMT')
v.directorio = c('VCNNS',
'MJNNVIGILOScCanal',
'JANASUE_revisado',
'GH',
'GURM_revisado',
'CLMN10SUE',
'RLMN',
'RRMNS_2',
'JGMN6SUE',
'FGH_EEGdescompuesto',
'MGNA',
'EMNN')
frecuenciasss = c(200,
512,512,
200,
200,#segun valeria GUR=200 Hz
#512, #segun la libreta GURM=512
512,512,
200,#solo tiene 3 horas
512,
512,512,
200)
grupo_de = c(0,0,0,0,0,1,1,1,1,-1,-1,-1)
banda.n = c('Delta','Theta','Alfa','Beta','Gamma','Potencia total',
'Ondas lentas fuera de rango','Ondas rapidas fuera de rango')
banda   = c('DELTA','THETA','ALFA','BETA','GAMMA','TOTAL','SUB','SUPER')
nbandas = length(banda.n)
nombre      = v.nombres[sujeto]
etiqueta    = v.etiqueta[sujeto]
fr_muestreo = frecuenciasss[sujeto]
dir_res_est = paste0('~/TESIS/graf_datos/estacionariedad_sinfiltro/',
v.directorio[sujeto])
dur_epoca   = 15
if(fr_muestreo==512){
dur_epo_reg = 30
}
if(fr_muestreo==200){
dur_epo_reg = 10
}
stam         = T
orden_stam  = c(9,8,7,6,5,4,17,16,2,1,19,18,14,13,12,11,10,3,15,20,21,22)
grabar      = F
anotaciones = ''
reemplazar  = TRUE
canales      = 'PSG'
binario = F
escala  = F
etiquetas_tiempo = F
zoom           = F
unidad_par_t   = 'puntos'
ajuste_ini_epo = 0
min_epo        = 0
max_epo        = 0
paso    = 15*2
require('squash')
if(reemplazar){
if(canales=='10-20'){
canales = c('C3','C4','CZ','F3','F4','F7','F8','FP1','FP2','FZ','O1','O2',
'P3','P4','PZ','T3','T4','T5','T6')
if(stam){
orden_stam  = c(9,8,7,6,5,4,17,16,2,1,19,18,14,13,12,11,10,3,15)
canales = canales[orden_stam]
}
}
if(canales=='PSG'){
canales = c('C3','C4','CZ','F3','F4','F7','F8','FP1','FP2','FZ','O1','O2',
'P3','P4','PZ','T3','T4','T5','T6','LOG','ROG','EMG')
if(stam){
orden_stam  = c(9,8,7,6,5,4,17,16,2,1,19,18,14,13,12,11,10,3,15,20,21,22)
canales = canales[orden_stam]
}
}
}
if(length(canales)<1){
stop('ERROR: Lista de canales tiene longitud cero')
}
if(grupo_de[sujeto]==0){
grupo = 'Nn'
}
if(grupo_de[sujeto]==1){
grupo = 'Mn'
}
if(grupo_de[sujeto]==-1){
grupo = 'ex'
}
qq   = .925/6
cont = .025+6*qq
k = 1.5
setwd(dir_actual)
if(grabar_tot){
if(no_relativo){
tag = 'total'
}else{
tag = 'relativo'
}
setwd(dir_actual)
#pdf(
png(
paste0(nombre,'_combinado_',#tag,
#'.pdf'),width=5.941*k,height=1*k)
'.png'),units='in',res=300,width=5.941*k,height=9*k)
}
par(oma=c(0,0,0,0),
mar=c(.25, 2+2.0, .25, 3+1),
mgp=c(2.0,.5,0))
qq   = .925/6
cont = .025+5*qq
k = 1.5
setwd(dir_actual)
if(grabar_tot){
if(no_relativo){
tag = 'total'
}else{
tag = 'relativo'
}
setwd(dir_actual)
#pdf(
png(
paste0(nombre,'_combinado_',#tag,
#'.pdf'),width=5.941*k,height=1*k)
'.png'),units='in',res=300,width=5.941*k,height=9*k)
}
par(oma=c(0,0,0,0),
mar=c(.25, 2+2.0, .25, 3+1),
mgp=c(2.0,.5,0))
cont = cont + qq
for(ch in 20:22){
cont = cont - qq
setwd(dir_actual)
#que.banda = que.banda + 1
par(fig=c(0,1,cont,cont+qq), new=TRUE)
source('~/TESIS/TESIS/img_resultados/graf_canal_espectro01_parte.R')
}
dev.off()
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
dev.off()
dev.off()
sujeto = 1
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 6
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 8
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 9
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 2
sujeto = 1
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 2
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 6
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 8
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
sujeto = 9
source('~/TESIS/TESIS/img_resultados/graf_espectro_est01_todo.R')
